var _ = require("../../../_");

/**
 * data module, autogenerated by grunt. <br>
 * change and contribute to dictionary <br>
 *  <br>
 * singular nouns having irregular plurals <br>
 * and uncountable nouns <br>
 * {{.refs}} PRPs that can be a reference (e.g. "she"), <br>
 * {{.prps}} all PRP "nouns",{{.pps}} all PP "nouns",{{.entityBlacklist}},{{.personBlacklist}} <br>
 *  <br>
 * @readonly
 * @module data/en/nouns/index
 */


  exports.zip = { refs: [ 1, 2, 3, 4, 6, 8, 9, 11 ],
  prps: 
   [ 'i',
     'you',
     'he',
     'she',
     'it',
     'we',
     'they',
     'me',
     'him',
     'her',
     'us',
     'them',
     'thou',
     'il',
     'elle',
     '\'em' ],
  pps: 
   [ [ 'mine', 0 ],
     [ 'yours', 1 ],
     [ 'his', 2 ],
     [ 'her', 3 ],
     [ 'hers', 3 ],
     [ 'its', 4 ],
     [ 'our', 5 ],
     [ 'ours', 5 ],
     [ 'theirs', 6 ],
     [ 'their', 6 ] ],
  prpRefs: [ [ 11, 6 ] ],
  entityBlacklist: 
   [ 'west',
     'western',
     'east',
     'eastern',
     'north',
     'northern',
     'south',
     'southern',
     'today',
     'yesterday',
     'tomorrow',
     'era',
     'century',
     'my',
     'your',
     'itself',
     'the',
     '&' ],
  personBlacklist: 
   [ 'center',
     'house',
     'park',
     'square',
     'centre',
     'memorial',
     'school',
     'bridge',
     'university',
     'college',
     'foundation',
     'institute',
     'club',
     'museum',
     'hall',
     'arena',
     'stadium',
     'partner',
     'the',
     'ave',
     'blvd',
     'uss',
     'ss',
     'for',
     'and',
     '&' ] }
module.exports = (function () {
				var _ppRefs = {};
				exports.zip.pps.forEach(function(a) { _ppRefs[a[0]] = exports.zip.prps[a[1]]; });
				exports.zip.prpRefs.forEach(function(a) { _ppRefs[exports.zip.prps[a[0]]] = exports.zip.prps[a[1]]; });
				return {
					refs: exports.zip.refs.map(function(i) { return exports.zip.prps[i]; }),
					prps: exports.zip.prps.reduce(_.toObj, {}),
					pps: exports.zip.pps.reduce(_.toObj, {}),
					ppRefs: _ppRefs,
					entityBlacklist: exports.zip.entityBlacklist.reduce(_.toObj, {}),
					personBlacklist: exports.zip.personBlacklist,
				}
			})();